What happens when you initialize a repository? Why do you need to do it?
- Creates a blank repository, you need to do it to so that git can create the
  .git directory to track changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
- The staging area is an intermediate step between the repository and the working directory
- It is valubale in that it can act as a prototype for you7r next commit adding and removing files from it that you are planning to commit the nextr time nyou run the commit commmand.

How can you use the staging area to make sure you have one commit per logical change?
- only add the files for the next logical change when you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- when making experi9mental changes to pieces of software without interfering with the main branch code

How do the diagrams help visualise branch structure?
- You can see what is actually happening and where you are at any given point in time

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
- The result of merging the branches together is making the branch coherent with both streams of development i.e changes from both branches are incorporated into the same branch

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
- pros are that you dont have to deal with things that can be resolved simply.
- you have slightly less control but don't think thats anything to worry about.
